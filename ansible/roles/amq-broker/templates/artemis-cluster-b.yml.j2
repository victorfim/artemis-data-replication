apiVersion: broker.amq.io/v1beta1
kind: ActiveMQArtemis
metadata:
  name: {{dc_b_artemis_namespace}}
  labels:
    brokerid: {{dc_b_artemis_namespace}}
  generation: 1
  namespace: {{dc_a_artemis_namespace}}
spec:
  acceptors:
    - name: acceptor
      port: 61616
      protocols: 'AMQP,CORE,STOMP'
    - expose: true
      name: mirror
      port: 5673
      protocols: AMQP
  brokerProperties:
    - AMQPConnections.target.uri=tcp://{{ dc_a_artemis_cluster  }}-mirror-0-svc.{{ dc_a_artemis_cluster }}.svc.cluster.local:5673?clientFailureCheckPeriod=2000&connectionTTL=5000"
    - AMQPConnections.target.retryInterval=5000
    - AMQPConnections.target.reconnect-attempts=-1
    - AMQPConnections.target.user=admin
    - AMQPConnections.target.password=amqintadmin
    - AMQPConnections.target.autoStart=true
    - AMQPConnections.target.connectionElements.mirror.type=MIRROR
    - >-
      AMQPConnections.target.connectionElements.mirror.messageAcknowledgements=true
    - AMQPConnections.target.connectionElements.mirror.queueCreation=true
    - AMQPConnections.target.connectionElements.mirror.queueRemoval=true
  env:
    - name: TZ
      value: America/Sao_Paulo
  deploymentPlan:
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - values:
                    - {{dc_a_artemis_namespace}}
                  key: brokerid
                  operator: In
            topologyKey: kubernetes.io/hostname
    storage:
      size: 1Gi
    size: 1
    persistenceEnabled: true
    requireLogin: true
    messageMigration: true
    managementRBACEnabled: true
    journalType: nio
    enableMetricsPlugin: true
    clustered: true
    image: placeholder
  console:
    expose: true
    sslEnabled: false
  upgrades:
    enabled: false
    minor: false
  adminPassword: Rafael@123456784
  adminUser: admin
